<?xml version="1.0" encoding="utf-8"?>

<project name="rabnet" default="full_build" basedir=".">
	<description>rabnet project makefile</description>
	
  <!-- properties defines !-->
	
	<property name="version" value="1.0"/>
	<property name="minver_p" value="5"/>
	<property name="minver" value="${minver_p}.0"/>
	<property name="fullver" value="${version}.${minver}"/>

	<property name="appname" value="Миакро-9.11"/>
	<property name="companyname" value="9-Бит"/>

	<property name="appname_en" value="Miakro-9.11"/>
	<property name="companyname_en" value="9-Bits"/>

	<property name="revision" value="none"/>

	<property name="curdir" value="." overwrite="false"/>
	<property name="host_spec_path" value=".." overwrite="false"/>

	<if test="${not property::exists('build.root')}">
        <property name="build.root" value="../../.." if="${file::exists('../../../host_spec.include')}"/>
        <property name="build.root" value="../.." if="${file::exists('../../host_spec.include')}"/>
	</if>

	<include buildfile="${build.root}/host_spec.include"/>
	<!--include buildfile="${host_spec_path}/host_spec.include"/-->

	<!--echo message="${path::get-file-name(directory::get-parent-directory(project::get-base-directory()))}"/-->

	<if test="${path::get-file-name(directory::get-parent-directory(project::get-base-directory()))!='trunk'}">
		<property name="build.version" value="${path::get-file-name(directory::get-parent-directory(project::get-base-directory()))}" unless="${property::exists('build.version')}"/>
		<echo message="Build version base from directory name: ${build.version}" />
	</if>
	
	<!--property name="vdir" value="${project::get-base-directory()}"/-->

	<property name="root_bin" value="${curdir}/../bin"/>
	<property name="all_i_need" value="${build.root}/allineed"/>
	<property name="tools_dir" value="${root_bin}/tools" />
	<property name="plugin_dir" value="${root_bin}/PlugIns" />
	<property name="distrib_dir" value="${root_bin}/distrib" />
	
	<property name="log4net.lib" value="log4net.dll" />
	<property name="log4net.ass" value="${log4net.path}/${log4net.lib}" />
	<property name="mysql.lib" value="MySql.Data.dll" />
	<property name="mysql.ass" value="${mysql.path}/${mysql.lib}" />

	<property name="office.core.name" value="Interop.Microsoft.Office.Core.dll" />
	<property name="office.excel.name" value="Interop.Microsoft.Office.Interop.Excel.dll" />
	<property name="office.core.path" value="${Office.path}/${office.core.name}" />
	<property name="office.excel.path" value="${Office.path}/${office.excel.name}" />
	
	<property name="grd_path.bin" value="${grd_path}\Bin" />
	<property name="grd_path.lib" value="${grd_path}\Lib" />
	<property name="grd_lib64_path" value="${grd_path}\Lib\x64" />	
	<property name="guardant2.lib" value="GrdAPI32.DLL" />
	<property name="guardant2_64.lib" value="GrdAPI64.DLL" />
	<property name="guardantNET.lib" value="GuardantDotNetApi.dll" />
	<property name="grdClientConf" value="gnclient.ini" />

	<property name="rep.lib" value="RdlViewer.dll" />
	<property name="rep.ass" value="${rep.path}/${rep.lib}" />
	<property name="repeng.lib" value="RdlEngine.dll" />
	<property name="repeng.ass" value="${rep.path}/${repeng.lib}" />
	<property name="obfuscator" value="Eazfuscator.NET.exe" />
	
	<property name="grd_ob" value="${grd_path.bin}\CodeObfuscator.exe" />
	<property name="grd_prot" value="${grd_path.bin}\CodeProtect.exe" />

	<property name="nant_contrib" value="${all_i_need}/NAnt/NAnt.Contrib.Tasks.dll" />

	<property name="obfuscated" value="" />

	<property name="compile_flag" value="" />
	<property name="dotnetInstaller" value="dotnetfx.exe"/>
	<property name="mysqlInstaller" value="mysql-essential-5.1.49-win32.msi"/>
	<property name="MSIInstaller" value="WindowsXP-KB942288-v3-x86.exe"/>

	<property name="dotnetInstallerSource" value="${party3d.path}/${dotnetInstaller}"/>
	<property name="mysqlInstallerSource" value="${party3d.path}/${mysqlInstaller}"/>
	<property name="MSIInstallerSource" value="${party3d.path}/${MSIInstaller}"/>
	
	<property name="GrdTru" value="GrdTRU.exe"/>
	<property name="GrdSrv" value="grdsrv.exe"/>
	<property name="GrdMon" value="grdmon.exe"/>
	<property name="GrdTruSource" value="${grd_path.bin}/${GrdTru}"/>
	<property name="GrdSrvSource" value="${grd_path.bin}/${GrdSrv}"/>
	<property name="GrdMonSource" value="${grd_path.bin}/${GrdMon}"/>
	
	<property name="Bin7zSource" value="${party3d.path}/7z"/>

	<property name="installersPath" value=""/>
	<property name="slash" value=""/>
	<property name="dotnetInstallerDest" value="${installersPath}${slash}${dotnetInstaller}"/>
	<property name="mysqlInstallerDest" value="${installersPath}${slash}${mysqlInstaller}"/>
	<property name="MSIInstallerDest" value="${installersPath}${slash}${MSIInstaller}"/>

	<property name="NSIS" value="${NSISPath}\makensis.exe"/>

	<property name="nant.settings.currentframework" value="net-2.0" />

	<!-- TARGETS !-->

	<target name="build" depends="clear,buildall,tools" description="Full build"/>

	<target name="clear" description="Clear build directories">
		<delete dir="${root_bin}" />
	</target>

	<target name="prepare_bin_dir">
		<mkdir dir="${root_bin}"/>
		<delete dir="${bin_dir}"/>
		<mkdir dir="${bin_dir}"/>
		<mkdir dir="${bin_dir}/7z"/>
		<mkdir dir="${bin_dir}/RabNet"/>
		<mkdir dir="${bin_dir}/RabNet/reports"/>
		<mkdir dir="${bin_dir}/RabDump"/>
		<mkdir dir="${bin_dir}/Tools"/>
		<mkdir dir="${bin_dir}/Guardant"/>
		<mkdir dir="${bin_dir}/Genetics"/>
		<property name="log4net.use" value="${bin_dir}/RabNet/${log4net.lib}" />
		<property name="log4net.d.use" value="${bin_dir}/RabDump/${log4net.lib}" />
		<property name="mysql.use" value="${bin_dir}/RabNet/${mysql.lib}" />
		<property name="mysql.d.use" value="${bin_dir}/RabDump/${mysql.lib}" />
		<property name="mysql.t.use" value="${bin_dir}/Tools/${mysql.lib}" />
		<property name="rep.use" value="${bin_dir}/RabNet/${rep.lib}" />
		<property name="repeng.use" value="${bin_dir}/RabNet/${repeng.lib}" />
		<copy file="${log4net.ass}" tofile="${log4net.use}" />
		<copy file="${log4net.ass}" tofile="${log4net.d.use}" />
		<copy file="${mysql.ass}" tofile="${mysql.use}" />
		<copy file="${mysql.ass}" tofile="${mysql.d.use}" />
		<copy file="${mysql.ass}" tofile="${mysql.t.use}" />
		<copy file="${rep.ass}" tofile="${rep.use}" />
		<copy file="${repeng.ass}" tofile="${repeng.use}" />
		<copy file="${office.core.path}" tofile="${bin_dir}/RabNet/${office.core.name}" />
		<copy file="${office.excel.path}" tofile="${bin_dir}/RabNet/${office.excel.name}" />
		<copy file="${grd_path.lib}/${guardant2.lib}" tofile="${bin_dir}/RabNet/${guardant2.lib}" />
		<copy file="${grd_lib64_path}/${guardant2_64.lib}" tofile="${bin_dir}/RabNet/${guardant2_64.lib}" />
		<copy file="${grd_path.lib}/${guardantNET.lib}" tofile="${bin_dir}/RabNet/${guardantNET.lib}" />
		<copy file="${grd_path.lib}/${guardant2.lib}" tofile="${bin_dir}/RabDump/${guardant2.lib}" />
		<copy file="${grd_lib64_path}/${guardant2_64.lib}" tofile="${bin_dir}/RabDump/${guardant2_64.lib}" />
		<copy file="${grd_path.lib}/${guardantNET.lib}" tofile="${bin_dir}/RabDump/${guardantNET.lib}" />
		
		<copy file="${GrdTruSource}" tofile="${bin_dir}/Guardant/${GrdTru}" />
		<copy file="${GrdSrvSource}" tofile="${bin_dir}/Guardant/${GrdSrv}" />
		<!--copy file="${GrdMonSource}" tofile="${bin_dir}/Guardant/${GrdMon}" /-->
		<copy file="${curdir}/rabnet/gui/${grdClientConf}" tofile="${bin_dir}/RabNet/${grdClientConf}" />
		
		<copy todir="${bin_dir}/RabNet/reports">
			<fileset basedir="${curdir}/rabnet/gui/reports">
				<include name="*.rdl"/>
			</fileset>
		</copy>
		<copy todir="${bin_dir}/RabNet">
			<fileset basedir="${curdir}/../help/rabnet_help">
				<include name="*.chm"/>
			</fileset>
		</copy>
		<copy todir="${bin_dir}/7z">
			<fileset basedir="${Bin7zSource}">
				<include name="*.*"/>
			</fileset>
		</copy>
	</target>

	<target name="prepare_bin_dir_demo">
		<mkdir dir="${root_bin}"/>
		<delete dir="${bin_dir}"/>
		<mkdir dir="${bin_dir}"/>
		<mkdir dir="${bin_dir}/Tools"/>
		<mkdir dir="${bin_dir}/RabNet"/>
		<property name="log4net.use" value="${bin_dir}/RabNet/${log4net.lib}" />
		<property name="mysql.use" value="${bin_dir}/RabNet/${mysql.lib}" />
		<property name="mysql.t.use" value="${bin_dir}/Tools/${mysql.lib}" />
		<copy file="${log4net.ass}" tofile="${log4net.use}" />
		<copy file="${mysql.ass}" tofile="${mysql.use}" />
		<copy file="${mysql.ass}" tofile="${mysql.t.use}" />
		<copy todir="${bin_dir}/RabNet">
			<fileset basedir="${curdir}/../help/rabnet_help">
				<include name="*.chm"/>
			</fileset>
		</copy>
	</target>

	<target name="release" description="Build RELEASE">
		<property name="compile_flag" value="RELEASE" />
		<property name="bin_dir" value="${root_bin}/release" />
		<call target="prepare_bin_dir"/>
		<call target="compile"/>
	</target>
	<!--target name="release_zip" description="Zip RELEASE">
		<property name="bin_dir" value="${root_bin}/release"/>
		<zip zipfile="${root_bin}/release.rev.${revision}${obfuscated}.zip" failonerror="false">
			<fileset basedir="${bin_dir}">
				<include name="**/*"/>
			</fileset>
		</zip>
	</target-->
	
	<!--target name="buildall" depends="svn_rev,release,protected,tools,release_zip" description="Build all projects"/-->
	<target name="buildall" depends="svn_rev,protected,demo,tools" description="Build all projects">
		<delete dir="${curdir}/_tmp"/>
	</target>
	
	<target name="protected" description="Build PROTECTED">
		<property name="compile_flag" value="PROTECTED" />
		<property name="bin_dir" value="${root_bin}/protected"/>
		<call target="prepare_bin_dir"/>
		<call target="compile"/>
	</target>
	
	<target name="demo" description="Build DEMO">
		<property name="compile_flag" value="DEMO" />
		<property name="bin_dir" value="${root_bin}/demo"/>
		<call target="prepare_bin_dir_demo"/>
		<call target="compile_demo"/>
	</target>
	
	<target name="tools" description="Build TOOLS">
		<mkdir dir="${root_bin}"/>
		<delete dir="${tools_dir}"/>
		<mkdir dir="${tools_dir}"/>
		<property name="bin_dir" value="${tools_dir}"/>
		<property name="mysql.use" value="${bin_dir}/${mysql.lib}" />
		<copy file="${mysql.ass}" tofile="${mysql.use}" />
		<copy file="${log4net.ass}" tofile="${bin_dir}/${log4net.lib}" />
		<call target="updater" />
		<call target="plugins" />
		<!--delete file=""${mysql.use}/-->
	</target>

	<target name="compile" depends="miaconv,rabnet,rabdump"/>

	<target name="compile_demo" depends="miaconv,rabnet_demo">
		<xmlpoke file="${root_bin}/demo/RabNet/rabnet.exe.config" xpath="/configuration/log4net/root/level/@value" value="ERROR" />
	</target>

	<target name="miaconv" description="Make mia converter project">
		<copy file="${curdir}/mia_conv/rabnet_db_fmt.sql" tofile="${curdir}/mia_conv/mia_conv.rabnet_db_fmt.sql"/>
		<copy file="${log4net.use}" tofile="${bin_dir}/Tools/${log4net.lib}" />
		<csc target="winexe" output="${bin_dir}/Tools/mia_conv.exe" win32icon="${curdir}/mia_conv/icon_yell_red.ico" define="${compile_flag}" optimize="true">
			<sources>
				<include name="${curdir}/_tmp/*.cs"/>
				<include name="${curdir}/mia_conv/*.cs"/>				
			</sources>
			<resources>
				<include name="${curdir}/mia_conv/mia_conv.rabnet_db_fmt.sql"/>
				<include name="${curdir}/mia_conv/*.resx"/>
			</resources>
			<references>
				<include name="${mysql.use}"/>
				<include name="${log4net.use}"/>
			</references>
		</csc>
		<copy file="${curdir}/mia_conv/app.config" tofile="${bin_dir}/Tools/mia_conv.exe.config" />
		<delete file="${curdir}/mia_conv/mia_conv.rabnet_db_fmt.sql"/>
	</target>

	<!--target name="rabnet" description="make rabnet application" depends="db.mysql,engine,gui"/-->
	<target name="rabnet" description="make rabnet application" depends="db.Interface,db.mysql,engine,pickers,gui_genetics,cas,gui"/>

	<target name="rabnet_demo" description="make rabnet application" depends="db.Interface,db.mysql,engine,pickers,gui"/>
	
	<target name="pickers" description="pickers library for rabnet">
		<csc target="library" output="${bin_dir}/RabNet/Pickers.dll" define="${compile_flag}" optimize="true">
			<sources>
				<include name="${curdir}/libs/pickers/*.cs"/>
				<include name="${curdir}/libs/pickers/ComboBoxAppearance/*.cs"/>
				<include name="${curdir}/libs/pickers/Properties/*.cs"/>
			</sources>
		</csc>
	</target>

	<target name="db.Interface" description="interface for all data layer">
		<csc target="library" output="${bin_dir}/RabNet/db.Interface.dll" define="${compile_flag}" optimize="true">
			<sources>
				<include name="${curdir}/rabnet/db.Interface/*.cs"/>
				<include name="${curdir}/rabnet/db.Interface/Properties/*.cs"/>
			</sources>
			<references>
				<include name="${log4net.use}"/>
				<include name="${mysql.use}"/>
			</references>
		</csc>
	</target>
	
	<target name="db.mysql" description="mysql data layer">
		<csc target="library" output="${bin_dir}/RabNet/db.mysql.dll" define="${compile_flag}" optimize="true">
			<sources>
				<include name="${curdir}/rabnet/db.mysql/*.cs"/>
				<include name="${curdir}/rabnet/db.mysql/CatalogData/*.cs"/>
				<include name="${curdir}/rabnet/db.mysql/Properties/*.cs"/>
			</sources>
			<references>
				<include name="${bin_dir}/RabNet/db.Interface.dll" />
				<include name="${log4net.use}"/>
				<include name="${mysql.use}"/>
			</references>
		</csc>
	</target>
	
	<target name="cas" description="scale">
		<csc target="library" output="${bin_dir}/RabNet/CAS.dll" define="${compile_flag}" optimize="true">
			<sources>
				<include name="${curdir}/rabnet/CasLp16/*.cs"/>
				<include name="${curdir}/rabnet/CasLp16/Properties/*.cs"/>
			</sources>
			<resources>
				<include name="${curdir}/rabnet/CasLp16/*.resx"/>
			</resources>
			<references>
				<include name="${log4net.ass}" />
			</references>
		</csc>
	</target>

	<target name="engine" description="engine">
		<csc target="library" output="${bin_dir}/RabNet/engine.dll" define="${compile_flag}" optimize="true">
			<sources>
				<include name="${curdir}/rabnet/engine/*.cs"/>
				<include name="${curdir}/rabnet/engine/Properties/*.cs"/>
			</sources>
			<references>
				<include name="${log4net.use}"/>
				<include name="${bin_dir}/RabNet/db.Interface.dll" />
				<include name="${bin_dir}/db.miafile.dll" />
			</references>
		</csc>
	</target>

	<target name="gui_genetics" description="rabnet gui genetics">
		<csc target="library" output="${bin_dir}/Genetics/gui_genetics.dll" define="${compile_flag}" optimize="true">
			<sources>
				<include name="${curdir}/rabnet/gui_genetics/*.cs"/>
				<include name="${curdir}/rabnet/gui/Engine.cs"/>
				<include name="${curdir}/rabnet/gui_genetics/Properties/*.cs"/>
				<include name="${curdir}/rabnet/gui_genetics/Components/*.cs"/>
				<include name="${curdir}/rabnet/gui_genetics/Forms/*.cs"/>
			</sources>
			<resources>
				<include name="${curdir}/rabnet/gui_genetics/Forms/*.resx"/>
				<include name="${curdir}/rabnet/gui_genetics/Components/*.resx"/>
			</resources>
			<references>
				<include name="${log4net.use}"/>
				<include name="${rep.use}"/>
				<include name="${repeng.use}"/>
				<include name="${bin_dir}/RabNet/db.Interface.dll" />
				<include name="${bin_dir}/RabNet/engine.dll" />
			</references>
		</csc>
	</target>

	<target name="rabdump" description="rabnet db dumper">		
		<copy file="${party3d.path}/ccxmlrpc.dll" tofile="${bin_dir}/RabDump/ccxmlrpc.dll" />
		<copy file="${bin_dir}/RabNet/db.Interface.dll" tofile="${bin_dir}/RabDump/db.Interface.dll" />
		<copy file="${bin_dir}/RabNet/db.mysql.dll" tofile="${bin_dir}/RabDump/db.mysql.dll" />
		<copy file="${bin_dir}/RabNet/engine.dll" tofile="${bin_dir}/RabDump/engine.dll" />
		<csc target="winexe" output="${bin_dir}/RabDump/rabdump.exe" win32icon="${curdir}/rabdump/icon_white.ico" define="${compile_flag}" optimize="true">
			<sources>
				<include name="${curdir}/_tmp/*.cs"/>
				<include name="${curdir}/rabdump/*.cs"/>				
				<include name="${curdir}/rabdump/classes/*.cs"/>
				<include name="${curdir}/rabdump/panels/*.cs"/>
				<include name="${curdir}/rabdump/remote/*.cs"/>		
				<include name="${curdir}/rabdump/Forms/*.cs"/>				
				<include name="${curdir}/rabdump/Properties/AssemblyInfo.cs"/>
				
				<include name="${curdir}/libs/GRD/GRD_Base.cs"/>
				<include name="${curdir}/libs/GRD/GRD_BaseTRU.cs"/>
				<include name="${curdir}/libs/GRD/GRD_BaseCodes.cs"/>
				<include name="${curdir}/libs/GRD/GRDCommon.cs"/>
				<include name="${curdir}/libs/pEngine/RequestPack.cs"/>
				<include name="${curdir}/libs/pEngine/xxTEA.cs"/>
				<include name="${curdir}/libs/pEngine/Helper.cs"/>
				<include name="${curdir}/libs/pEngine/pException.cs"/>
				<include name="${curdir}/libs/pEngine/AppUpdater.cs"/>
				
				<include name="${curdir}/mia_conv/miaExitCode.cs"/>				
				<include name="${curdir}/rabnet/gui/classes/RabnetConfig/*.cs"/>
				<include name="${curdir}/rabnet/gui/panels/FarmsPanel.cs"/>
				<include name="${curdir}/rabnet/gui/panels/FarmsPanel.Designer.cs"/>
				<!--include name="${curdir}/rabnet/gui/forms/FarmChangeForm.cs"/>
				<include name="${curdir}/rabnet/gui/forms/FarmChangeForm.Designer.cs"/-->
				<include name="${curdir}/GrdRemoteUpdate/Admin/engine/Structures.cs"/>
				<include name="${curdir}/GrdRemoteUpdate/Admin/gui/form/AddDongleForm.cs"/>
				<include name="${curdir}/GrdRemoteUpdate/Admin/gui/form/AddDongleForm.designer.cs"/>
			</sources>
			<resources>
				<include name="${curdir}/rabdump/*.resx"/>
				<include name="${curdir}/rabdump/Properties/*.resx"/>
				<include name="${curdir}/rabdump/Forms/*.resx"/>
				<include name="${curdir}/rabdump/panels/*.resx"/>
				<!--include name="${curdir}/rabnet/gui/forms/FarmChangeForm.resx"/-->
				<include name="${curdir}/rabnet/gui/panels/FarmsPanel.resx"/>
				<include name="${curdir}/GrdRemoteUpdate/Admin/gui/form/AddDongleForm.resx"/>
			</resources>
			<references>
				<include name="${bin_dir}/RabDump/${guardantNET.lib}" />
				<include name="${log4net.use}"/>
				<include name="${party3d.path}/ccxmlrpc.dll"/>
				<include name="${bin_dir}/RabDump/engine.dll"/>
				<include name="${bin_dir}/RabDump/db.Interface.dll"/>
			</references>
		</csc>
		<copy file="${curdir}/rabdump/clean_config/rabdump.exe.config" tofile="${bin_dir}/RabDump/rabdump.exe.config" />
	</target>

	<target name="gui" description="rabnet gui">
		<csc target="winexe" output="${bin_dir}/RabNet/rabnet.exe" win32icon="${curdir}/rabnet/gui/icon_green.ico" define="${compile_flag}" optimize="true">
			<sources>
				<include name="${curdir}/_tmp/*.cs"/>
				<include name="${curdir}/rabnet/gui/Program.cs"/>
				<include name="${curdir}/rabnet/gui/classes/*.cs"/>
				<include name="${curdir}/rabnet/gui/classes/RabnetConfig/*.cs"/>				
				<include name="${curdir}/rabnet/gui/Properties/AssemblyInfo.cs"/>
				<include name="${curdir}/rabnet/gui/components/*.cs"/>
				<include name="${curdir}/rabnet/gui/components/Pickers/*.cs"/>
				<include name="${curdir}/rabnet/gui/components/Pickers/ComboBoxAppearance/*.cs"/>
				<include name="${curdir}/rabnet/gui/components/ColorPickerColumn/*.cs"/>
				<include name="${curdir}/rabnet/gui/filters/*.cs"/>
				<include name="${curdir}/rabnet/gui/panels/*.cs"/>
				<include name="${curdir}/rabnet/gui/panels/RabInfoPanels/*.cs"/>
				<include name="${curdir}/rabnet/gui/forms/*.cs"/>
				<include name="${curdir}/rabnet/gui/reports/*.cs"/>
				<include name="${curdir}/libs/GRD/GRD_Base.cs"/>
				<include name="${curdir}/libs/GRD/GRD_BaseCodes.cs"/>
				<include name="${curdir}/rabdump/classes/x_tools.cs"/>
				<include name="${curdir}/mia_conv/miaExitCode.cs"/>
			</sources>
			<resources>
				<include name="${curdir}/rabnet/gui/forms/*.resx"/>
				<include name="${curdir}/rabnet/gui/panels/*.resx"/>
				<include name="${curdir}/rabnet/gui/components/*.resx"/>
				<include name="${curdir}/rabnet/gui/forms/ReportViewForm.resx"/>
				<include name="${curdir}/rabnet/gui/components/ColorPickerColumn/*.resx"/>
			</resources>
			<references>		
				<include name="${log4net.use}"/>
				<include name="${rep.use}"/>
				<include name="${repeng.use}"/>
				<include name="${bin_dir}/RabNet/Pickers.dll" />
				<include name="${bin_dir}/RabNet/db.Interface.dll" />
				<include name="${bin_dir}/RabNet/engine.dll" />
				<include name="${bin_dir}/RabNet/CAS.dll" />
				<include name="${bin_dir}/Genetics/gui_genetics.dll" />
				<include name="${bin_dir}/RabNet/${guardantNET.lib}" />				
				<include name="${office.core.path} "/>
				<include name="${office.excel.path} "/>				
			</references>
		</csc>
		<copy file="${curdir}/rabnet/gui/clean_config/rabnet.exe.config" tofile="${bin_dir}/RabNet/rabnet.exe.config" />
		<copy file="${curdir}/rabnet/gui/changeLog.txt" tofile="${bin_dir}/RabNet/changeLog.txt" />
		<!--move file="${bin_dir}/RabNet/CAS.dll" tofile="${bin_dir}/Tools/CAS.dll" failonerror="false" /-->
	</target>

	<target name="obfuscate" depends="buildall" description="Binary Obfuscation">
		<!--exec program="${obfuscator}">
			<arg value="${root_bin}/protected/Rabnet/db.mysql.dll" />
			<arg value="${root_bin}/protected/Rabnet/engine.dll" />
			<arg value="${root_bin}/protected/Rabnet/rabnet.exe" />
		</exec-->
		<exec program="${obfuscator}">
			<arg value="${root_bin}/protected/RabDump/rabdump.exe" />
		</exec>
		<exec program="${obfuscator}">
			<arg value="${root_bin}/protected/Tools/mia_conv.exe" />
		</exec>
		<exec program="${obfuscator}">
			<arg value="${tools_dir}/updater.exe" />
		</exec>
		<exec program="${obfuscator}">
			<arg value="${root_bin}/demo/Tools/mia_conv.exe" />
			<arg value="${root_bin}/demo/Rabnet/db.Interface.dll" />
			<arg value="${root_bin}/demo/Rabnet/db.mysql.dll" />
			<arg value="${root_bin}/demo/Rabnet/engine.dll" />
			<arg value="${root_bin}/demo/Rabnet/rabnet.exe" />
		</exec>
		<!--exec program="${grd_ob}">
			<arg value="/INIT" />
			<arg value="/MSG=C:\Program Files\Guardant\Guardant 5\PLAT_T+\bin\licensewizard.msg" />
			<arg value="/SO" />
			<arg value="/SE" />
			<arg value="/RC=1" />
			<arg value="/ATR=2" />
			<arg value="/GS3S" />
			<arg value="/UN=1" />
			<arg value="/SIGN" />
			<arg value="/OUT=${root_bin}/protected/RabNet/" />
			<!-arg value="/SO_CFG=${curdir}/GRDConfigs/rabnet/config.cfo" /->
			<arg value="/MAP=${root_bin}/protected/RabNet/rabnet.map" />
			<!-arg value="${root_bin}/protected/RabNet/rabnet.exe" /->
			<!-arg value="${root_bin}/protected/RabNet/engine.dll" />
			<arg value="${root_bin}/protected/RabNet/db.mysql.dll" /->
		</exec-->
		<exec program="${grd_prot}">
			<arg value="/INIT" />
			<arg value="/MSG=${grd_path.bin}\licensewizard.msg" />
			<arg value="/PER=20" />
			<arg value="/RC=1" />
			<arg value="/ATR=2" />
			<arg value="/GS3S" />
			<arg value="/UN=1" />
			<arg value="/SIGN" />
			<!--arg value="/MAP=${root_bin}/protected/RabNet/rabnet.map" /-->
			<!--arg value="/EL=${curdir}/GRDConfigs/rabnet/config.cfp" /-->
			<!--arg value="/IL=${curdir}/GRDConfigs/rabnet/rabnet.ifp" /-->
			<arg value="/OUT=${root_bin}/protected/RabNet/" />
			<arg value="${root_bin}/protected/RabNet/db.Interface.dll" />
			<arg value="${root_bin}/protected/RabNet/db.mysql.dll" />
			<arg value="${root_bin}/protected/RabNet/engine.dll" />
			<arg value="${root_bin}/protected/RabNet/rabnet.exe" />		
		</exec>

		<delete file="${root_bin}/protected/RabNet/rabnet.exe.old"/>	
		<delete file="${root_bin}/protected/RabNet/db.Interface.dll.old"/>
		<delete file="${root_bin}/protected/RabNet/db.mysql.dll.old"/>
		<delete file="${root_bin}/protected/RabNet/engine.dll.old"/>
		<delete file="${root_bin}/protected/RabNet/rabnet.map"/>

		<!--exec program="${grd_ob}">
			<arg value="/INIT" />
			<arg value="/MSG=C:\Program Files\Guardant\Guardant 5\PLAT_T+\bin\licensewizard.msg" />
			<arg value="/SO" />
			<arg value="/SE" />
			<arg value="/RC=1" />
			<arg value="/ATR=2" />
			<arg value="/GS3S" />
			<arg value="/UN=1" />
			<arg value="/SIGN" />
			<arg value="${root_bin}/protected/RabDump/rabdump.exe" />
			<arg value="/OUT=${root_bin}/protected/RabDump/" />
			<arg value="/SO_CFG=${curdir}/GRDConfigs/rabdump/config.cfo" />
		</exec-->
		<!--exec program="${grd_prot}">
			<arg value="/INIT" />
			<arg value="/MSG=C:\Program Files\Guardant\Guardant 5\PLAT_T+\bin\licensewizard.msg" />
			<arg value="/PER=50" />
			<arg value="/RC=1" />
			<arg value="/ATR=2" />
			<arg value="/GS3S" />
			<arg value="/UN=1" />
			<arg value="/SIGN" />
			<arg value="${root_bin}/protected/RabDump/rabdump.exe" />
			<arg value="/OUT=${root_bin}/protected/RabDump/" />
		</exec--> 

		<delete file="${root_bin}/protected/RabDump/rabdump.exe.old"/>

		<property name="obfuscated" value=".ob" />
		<!--call target="release_zip"/-->
	</target>

	<target name="updater" description="Make updater project">
		<csc target="winexe" output="${tools_dir}/updater.exe" win32icon="${curdir}/updater/icon_update_white.ico" optimize="true">
			<sources>
				<include name="${curdir}/updater/*.cs"/>
				<include name="${curdir}/_tmp/*.cs"/>
				<include name="${curdir}/mia_conv/miaExitCode.cs"/>
				<include name="${curdir}/rabnet/gui/classes/RabnetConfig/*.cs"/>
			</sources>
			<resources>
				<include name="${curdir}/updater/sql/*.sql"/>
				<include name="${curdir}/updater/*.resx"/>
			</resources>
			<references>
				<include name="${mysql.use}"/>
				<include name="${log4net.use}"/>
			</references>
		</csc>
		<copy file="${curdir}/updater/app.config" tofile="${tools_dir}/updater.exe.config" />
	</target>
	
	<target name="butcher" description="Make the Butcher Factory">		
		<delete dir="${bin_dir}/Butcher"/>
		<mkdir dir="${bin_dir}/Butcher"/>
		<copy file="${mysql.ass}" tofile="${bin_dir}/Butcher/${mysql.lib}" />
		<csc target="winexe" win32icon="${curdir}/butcher/icon_blue.ico" output="${bin_dir}/Butcher/butcher.exe" define="RELEASE" optimize="true">
			<sources>
				<include name="${curdir}/butcher/*.cs"/>
				<include name="${curdir}/butcher/Properties/*.cs"/>
				<include name="${curdir}/rabnet/gui/classes/RabnetConfig.cs"/>
				<include name="${curdir}/rabnet/gui/forms/FarmChangeForm.cs"/>
				<include name="${curdir}/rabnet/gui/forms/FarmChangeForm.Designer.cs"/>
				<include name="${curdir}/rabnet/gui/forms/FarmListForm.cs"/>
				<include name="${curdir}/rabnet/gui/forms/FarmListForm.Designer.cs"/>
				<include name="${curdir}/mia_conv/miaExitCode.cs"/>
			</sources>
			<resources>
				<include name="${curdir}/butcher/Properties/*.resx"/>
				<include name="${curdir}/butcher/*.resx"/>
				<include name="${curdir}/butcher/image/*.*"/>
				<include name="${curdir}/rabnet/gui/forms/FarmChangeForm.resx"/>
				<include name="${curdir}/rabnet/gui/forms/FarmListForm.resx"/>
			</resources>
			<references>
				<include name="${bin_dir}/Butcher/${mysql.lib}"/>	
				<include name="${log4net.ass}"/>
			</references>
		</csc>
	</target>
	
	<target name="plugins" description="Make report plug ins"> 
		<delete dir="${plugin_dir}"/>
		<mkdir dir="${plugin_dir}"/>
		<call target="testplugin"/>
		<call target="populationplugin"/>
		<call target="okrolplanplugin"/>
		<!--еще плагины добавлять здесь,-->
	</target>	
	
	<target name="testplugin" description="test report plugin">
		<copy file="${curdir}/rabnet/ReportPlugIns/TestPlugIn/test.rdl" tofile="${plugin_dir}/TestPlugIn.test.rdl"/>
		<csc target="library" output="${plugin_dir}/TestPlugIn.dll" define="RELEASE" optimize="true">
			<sources>
				<include name="${curdir}/rabnet/ReportPlugIns/TestPlugIn/*.cs"/>
				<include name="${curdir}/rabnet/ReportPlugIns/TestPlugIn/Properties/*.cs"/>
			</sources>
			<resources>
				<include name="${plugin_dir}/TestPlugIn.test.rdl"/>
			</resources>
			<references>
				<include name="${root_bin}/Protected/RabNet/rabnet.exe" />
				<include name="${root_bin}/Protected/RabNet/db.Interface.dll" />
				<include name="${root_bin}/Protected/RabNet/engine.dll" />
			</references>
		</csc>
		<delete file="${plugin_dir}/TestPlugIn.test.rdl"/>
	</target>
	
	<target name="populationplugin" description="Population report plugin for Tatishevo">
		<copy file="${curdir}/rabnet/ReportPlugIns/PopulationPlugIn/population.rdl" tofile="${plugin_dir}/PopulationPlugIn.population.rdl"/>
		<csc target="library" output="${plugin_dir}/PopulationPlugIn.dll" define="RELEASE" optimize="true">
			<sources>
				<include name="${curdir}/rabnet/ReportPlugIns/PopulationPlugIn/*.cs"/>
				<include name="${curdir}/_tmp/VersionInfo.cs"/>
			</sources>
			<resources>
				<include name="${plugin_dir}/PopulationPlugIn.population.rdl"/>
			</resources>
			<references>
				<include name="${root_bin}/Protected/RabNet/rabnet.exe" />
				<include name="${root_bin}/Protected/RabNet/db.Interface.dll" />
				<include name="${root_bin}/Protected/RabNet/engine.dll" />
			</references>
		</csc>
		<delete file="${plugin_dir}/PopulationPlugIn.population.rdl"/>
	</target>
	
	<target name="okrolplanplugin" description="OkrolPlan report plugin for Tatishevo">
		<copy file="${curdir}/rabnet/ReportPlugIns/OkrolPlanPlugIn/okrolplan.rdl" tofile="${plugin_dir}/OkrolPlanPlugIn.okrolplan.rdl"/>
		<csc target="library" output="${plugin_dir}/OkrolPlanPlugIn.dll" define="RELEASE" optimize="true">
			<sources>
				<include name="${curdir}/rabnet/ReportPlugIns/OkrolPlanPlugIn/*.cs"/>
				<include name="${curdir}/_tmp/VersionInfo.cs"/>
			</sources>
			<resources>
				<include name="${plugin_dir}/OkrolPlanPlugIn.okrolplan.rdl"/>
			</resources>
			<references>
				<include name="${root_bin}/Protected/RabNet/rabnet.exe" />
				<include name="${root_bin}/Protected/RabNet/db.Interface.dll" />
				<include name="${root_bin}/Protected/RabNet/engine.dll" />
			</references>
		</csc>
		<delete file="${plugin_dir}/OkrolPlanPlugIn.okrolplan.rdl"/>
	</target>
	
	<target name="distrib_nsis" depends="obfuscate">
		<property name="dist_type" value="rabnet_protected"/>
		<property name="bin_dir" value="${root_bin}\protected"/>
		<property name="bin_type" value="protected"/>
		<property name="setup_suff" value=""/>
		<call target="nsis_bld"/>
		<property name="dist_type" value="rabnet_protected"/>
		<property name="bin_dir" value="${root_bin}\demo"/>
		<property name="bin_type" value="demo"/>
		<property name="build_no_up" value="1"/>
		<property name="setup_suff" value="_demo"/>
		<call target="nsis_bld"/>
	</target>

	<target name="clean_mark">
		<delete file="../build.ok" />
	</target>

	<target name="full_build" depends="clean_mark distrib_nsis">
		<if test="${property::exists('build.automated')}">
			<!--touch file="../build.ok" /-->
			<echo message="${datetime::now()}" file="..\build.ok" />
		</if>
	</target>

	<!--target name="miakro_911_release" depends="obfuscate">
		<property name="dist_type" value="rabnet_no_protect"/>
		<property name="bin_dir" value="${root_bin}\release"/>
		<property name="bin_type" value="release"/>
		<call target="nsis_bld"/>
	</target>

	<target name="miakro_911_release_no" depends="buildall">
		<property name="dist_type" value="rabnet_no_protect"/>
		<property name="bin_dir" value="${root_bin}\release"/>
		<property name="bin_type" value="release"/>
		<call target="nsis_bld"/>
	</target-->

	<target name="nsis_bld">
		<mkdir dir="${root_bin}"/>
		<delete dir="${root_bin}/miakro_911_${bin_type}"/>
		<mkdir dir="${root_bin}/miakro_911_${bin_type}"/>
		<if test="${not property::exists('build_no_up')}">
			<delete dir="${root_bin}/miakro_911_${bin_type}_up"/>
			<mkdir dir="${root_bin}/miakro_911_${bin_type}_up"/>
		</if>
		<mkdir dir="${root_bin}/miakro_911_${bin_type}/dotnetfx20"/>
		<mkdir dir="${root_bin}/miakro_911_${bin_type}/mysql"/>
		<copy file="${dotnetInstallerSource}" tofile="${root_bin}/miakro_911_${bin_type}/dotnetfx20/${dotnetInstallerDest}"/>
		<copy file="${mysqlInstallerSource}" tofile="${root_bin}/miakro_911_${bin_type}/mysql/${mysqlInstallerDest}"/>
		<copy file="${curdir}/../help/Руководство по установке программы Miakro 9.11.docx" tofile="${root_bin}/miakro_911_${bin_type}/Руководство по установке программы Miakro 9.11.docx"/>
		<if test="${bin_type=='protected'}">
			<copy file="${curdir}/../help/Создание Резервных Копий Базы Данных.docx" tofile="${root_bin}/miakro_911_${bin_type}/Создание Резервных Копий Базы Данных.docx"/>			
			<copy file="${curdir}/../help/Руководство по обновлению Ключей Защиты.docx" tofile="${root_bin}/miakro_911_${bin_type}/Руководство по обновлению Ключей Защиты.docx"/>
		</if>
		<!--property name="dist_type" value="rabnet"/>
		<property name="bin_dir" value="${root_bin}\release"/>
		<property name="minver" value="1"/>
		<call target="one_distrib"/-->
		<!--property name="dist_type" value="rabnet_protected"/>
		<property name="bin_dir" value="${root_bin}\protected"/-->
		<!--property name="minver" value="2"/-->
		<delete file="${curdir}/distrib/distrib_nsis/setup_bld.nsi"/>
		<delete file="${curdir}/distrib/distrib_nsis/setup.exe"/>
		<copy file="${curdir}/distrib/distrib_nsis/setup_${bin_type}_tmpl.nsi" tofile="${curdir}/distrib/distrib_nsis/setup_bld.nsi">
			<filterchain>
				<replacetokens>
					<token key="AppVer" value="${fullver}" />
					<token key="AppName" value="${appname}" />
					<token key="AppName_en" value="${appname_en}" />
					<token key="FileDescr" value="Программа установки ${appname} ${version}" />
					<token key="FileDescr_en" value="${appname_en} ${version} Installer" />
					<token key="CompanyName" value="${companyname}" />
					<token key="CompanyName_en" value="${companyname_en}" />
					<token key="Copys" value="(C) ${companyname} 2010" />
					<token key="Copys_en" value="(C) ${companyname_en} 2010" />
					<token key="bin_type" value="${bin_type}" />

					<!--token key="Comments" value="" /-->
				</replacetokens>
				<!--tabstospaces /-->
			</filterchain>
		</copy>		

		<exec program="${NSIS}">
			<arg value="/V3" />
			<arg value="${curdir}/distrib/distrib_nsis/setup_bld.nsi" />
		</exec>
		<copy file="${curdir}/distrib/distrib_nsis/setup.exe" tofile="${root_bin}/miakro_911_${bin_type}/setup${setup_suff}.exe"/>
		<if test="${not property::exists('build_no_up')}">
			<copy file="${curdir}/distrib/distrib_nsis/setup${setup_suff}.exe" tofile="${root_bin}/miakro_911_${bin_type}_up/setup.${fullver}.exe"/>
			<copy file="${curdir}/distrib/distrib_nsis/updates.xml" tofile="${root_bin}/miakro_911_${bin_type}_up/updates.xml"/>
			<loadtasks assembly="${nant_contrib}" />
			<checksum algorithm="MD5">
				<fileset>
					<include name="${root_bin}/miakro_911_${bin_type}_up/setup.${fullver}.exe"/>
				</fileset>
			</checksum>
			<loadfile file="${root_bin}/miakro_911_${bin_type}_up/setup.${fullver}.exe.MD5" property="distr.md5" />
			<delete file="${root_bin}/miakro_911_${bin_type}_up/setup.${fullver}.exe.MD5"/>
			<xmlpoke file="${root_bin}/miakro_911_${bin_type}_up/updates.xml" xpath="/update/bundle/file[@name = 'setup.exe']/@md5" value="${distr.md5}" />
			<xmlpoke file="${root_bin}/miakro_911_${bin_type}_up/updates.xml" xpath="/update/bundle/file[@name = 'setup.exe']/@uri" value="http://update.rabbit-soft.ru/rab/setup.${fullver}.exe" />
			<xmlpoke file="${root_bin}/miakro_911_${bin_type}_up/updates.xml" xpath="/update/bundle/version/@number" value="${fullver}" />
		</if>
	</target>

	<!-- FILL DATA!-->
	<target name="filldata" depends="build" description="filling developer databases">
		<unzip zipfile="${data_dir}/Farm_30.zip" todir="${data_dir}" />
		<exec program="${root_bin}/release/mia_conv.exe">
			<arg value="${data_dir}/Farm 3_0.mia" />
			<arg value="localhost;krol30;kroliki;krol;root;;" />
			<arg value="зоотехник;" />
			<arg value="${data_dir}/data_30.sql" />
			<arg value="quiet" />
		</exec>
		<delete file="${data_dir}\Farm 3_0.mia" />
		<unzip zipfile="${data_dir}/Farm_main.zip" todir="${data_dir}" />
		<exec program="${root_bin}/release/mia_conv.exe">
			<arg value="${data_dir}\Farm.mia" />
			<arg value="localhost;kroliki;kroliki;krol;root;;" />
			<arg value="зоотехник;" />
			<arg value="${data_dir}\data_main.sql" />
			<arg value="quiet" />
		</exec>
		<delete file="${data_dir}/Farm.mia" />
		<!--unzip zipfile="${data_dir}/Farm_last.zip" todir="${data_dir}" />
		<exec program="${root_bin}/release/mia_conv.exe">
			<arg value="${data_dir}\Farm.mia" />
			<arg value="localhost;krol_last;kroliki;krol;root;;" />
			<arg value="зоотехник;" />
			<arg value="${data_dir}\data_last.sql" />
			<arg value="quiet" />
		</exec>
		<delete file="${data_dir}/Farm.mia" /-->
	</target>

	<!-- RELEASES -->
	<target name="version" description="making Rabnet distributed release">
		<mkdir dir="${root_bin}"/>
		<property name="vdir" value="${root_bin}/${rel}"/>
		<delete dir="${vdir}"/>
		<mkdir dir="${vdir}"/>
		<call target="svn_co"/>
		<nant buildfile="${vdir}/src/rab.build" target="distrib">
			<properties>
				<property name="curdir" value="." />
				<property name="host_spec_path" value="./../../../src" />
			</properties>
		</nant>
		<delete dir="${vdir}/src" />
		<delete dir="${vdir}/.svn" />
	</target>
	
	<target name="svn_rev" description="set revision number in assembly info">
		<delete dir="${curdir}/_tmp"/>
		<mkdir dir="${curdir}/_tmp"/>
		<asminfo output="${curdir}/_tmp/VersionInfo.cs.tmp" language="CSharp">
			<imports>
				<import namespace="System.Reflection" />
			</imports>
			<attributes>
				<attribute type="AssemblyFileVersionAttribute" value="${version}.${minver_p}.$WCREV$" />
				<attribute type="AssemblyVersionAttribute" value="${version}.${minver_p}.$WCREV$" />
			</attributes>
		</asminfo>
		<exec program="subWCrev">
			<arg value="${build.root}" />
			<arg value="${curdir}/_tmp/VersionInfo.cs.tmp" />
			<arg value="${curdir}/_tmp/VersionInfo.cs" />
		</exec>
		<echo file="${curdir}/_tmp/rev.tmp">$WCREV$</echo>
		<exec program="subWCrev">
			<arg value="${build.root}" />
			<arg value="${curdir}/_tmp/rev.tmp" />
			<arg value="${curdir}/_tmp/rev.txt" />
		</exec>
		<loadfile file="${curdir}/_tmp/rev.txt" property="revision" />
		<echo message="Using Subversion revision number: ${revision}"/>
		<property name="minver" value="${minver_p}.${revision}"/>
		<property name="fullver" value="${version}.${minver}"/>
		<property name="fullver" value="${build.version}.${revision}" if="${property::exists('build.version')}"/>
		<echo message="Build version: ${fullver}" />
	</target>
	
</project>